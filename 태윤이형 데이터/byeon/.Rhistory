library(tabulizer)
url_NBA=("https://stats.nba.com/search/team-game/#?Season=2018-19&SeasonType=Playoffs&sort=GAME_DATE&dir=1")
url_NBA=read_html(url_NBA,Encoding=("UTF-8"))
library(rvest)
library(tm)
library(NLP)
setwd("C:/Users/Miguel Lim/Desktop/byeon")
library(tm)
library(NLP)
dir("data")
library(tm)
plans=VCorpus(DirSource("data",pattern ="txt" ))
str(plans[[1]])
content(plans[[1]])
meta(plans[[1]])
meta(plans[[1]], tag = "etc")<-"추가정보입니다"
plans[[1]]$content
plans[[1]]$content
plans[[i]]$content<- paste(plans[[i]]$content, collapse = ".")
plans[[1]]$content
meta(plans[[1]])
for(i in seq_along(plans)){
plans[[i]]$content = paste(plans[[i]]$content, collapse=" ")
}
plans[[1]]$content
plans=tm_map(plans, removePunctuation)
plans[[1]]$content
plans=tm_map((plans, stripWhitespace()))
plans[[1]]$content
library(tm)
library(NLP)
dir("data")
library(tm)
plans=VCorpus(DirSource("data",pattern ="txt" ))
str(plans[[1]])
meta(plans[[1]])
meta(plans[[1]], tag = "etc")<-"추가정보입니다"
meta(plans[[1]])
for(i in seq_along(plans)){
plans[[i]]$content = paste(plans[[i]]$content, collapse=" ")
}
plans[[1]]$content
plans=tm_map(plans, removePunctuation)
plans[[1]]$content
plans=tm_map((plans, stripWhitespace()))
plans=tm_map(plans, stripWhitespace)
plans[[1]]$content
plans= tm_map(plans, removeWords,stopwords('english'))
pans[[1]]$content
plans[[1]]$content
library(SnowballC)
install.packages("SnowballC")
library(SnowballC)
plans=tm_map(plans, stemDocument)
plans[[1]]$content
plan_tmd= TermDocumentMatrix(plans, control = list(tokenize="scan", ))
plan_tmd= TermDocumentMatrix(plans, control = list(tokenize="scan", wordLength=c(2,10))) ))
inspect(plan_tdm)
inspect(plan_tmd)
plan_tmd= TermDocumentMatrix(plans, control = list(tokenize="scan", wordLength=c(2,10)))
inspect(plan_tmd)
plan_tmd= TermDocumentMatrix(plans, control = list(tokenize="scan", wordLength=c(2,20)))
inspect(plan_tmd)
install.packages("wordcloud")
install.packages("RColorBrewer")
library(wordcloud)
library(RColorBrewer)
data= sapply(data, extractNoun, USE.NAMES = F)
library(RColorBrewer)
data= sapply(plans[[1]], extractNoun, USE.NAMES = F)
useSejongDic()
data_unlist = unlist(plans[[1]])
head(data_unlist)
plans[[1]]$content
plans= tm_map(plans, removeWords,stopwords('english'))
plans[[1]]$content
str(plans[[1]])
library(tm)
library(NLP)
dir("data")
library(tm)
plans=VCorpus(DirSource("data",pattern ="txt" ))
str(plans[[1]])
content(plans[[1]])
meta(plans[[1]])
meta(plans[[1]], tag = "etc")<-"추가정보입니다"
meta(plans[[1]])
for(i in seq_along(plans)){
plans[[i]]$content = paste(plans[[i]]$content, collapse=" ")
}
plans[[1]]$content
plans=tm_map(plans, removePunctuation)
plans[[1]]$content
plans=tm_map(plans, stripWhitespace)
plans[[1]]$content
plans= tm_map(plans, removeWords,stopwords('english'))
plans[[1]]$content
plan_tdm <- TermDocumentMatrix(plans, control=list(tokenize="scan", wordLengths=c(2, 30)))
#plan_tdm_1 <- TermDocumentMatrix(plans, control=list(wordLengths=c(2, 7)))
inspect(plan_tdm)
wordFreq <- slam::row_sums(plan_tdm)
wordFreq <- sort(wordFreq, decreasing=TRUE)
library(wordcloud)
pal <- brewer.pal(8,"Dark2")
w <- names(wordFreq)
wordcloud(words=w, freq=wordFreq,
min.freq=3, random.order=F,
random.color=T, colors=pal)
wordcloud(words=w, freq=wordFreq, min.freq=3, random.order=F,random.color=T, colors=pal)
